1: program = { statement semicolon_symbol } end_of_text
2: statement = definition | execution
3: definition = redefinition | createDefinition
4: execution = literalExecution | turtleStatement
5: literalExecution = execute_keyword l_round_braket_symbol literalString r_round_bracket_symbol
6: redefinition = redefine_keyword createDefinition
7: createDefinition = operation | production | evaluation
8: literalString = { literal plus_symbol } literal
9: operation = literal equals_symbol l_curly_bracket_symobl { turtleStatement semicolon_symbol } r_curly_bracket_symbol
10: production = literal production_operator literalString
11: evaluation = literal equals_symbol evaluate_keyword l_round_bracket_symbol int_number semicolon_symbol literalsString l_round_bracket_symbol
12: turtleStatement = forwardSt | rotateSt | penupSt | pendownSt  | pencolourSt | gotoSt | pensizeSt | scaleSt | pushstateSt | popstateSt
13: forwardSt = forward_keyword l_round_bracket_symbol float_number r_round_bracket_symbol
14: rotateSt = rotate_keyword l_round_bracket_symbol float_number r_round_bracket_symbol
15: penupSt = penup_keyword l_round_bracket_symbol r_round_bracket_symbol
16: pendownSt = pendown_keyword l_round_bracket_symbol r_round_bracket_symbol
17: pencolourSt = pencolour_keyword l_round_bracket_symbol int_number semicolon_symbol int_number semicolon_symbol int_number r_round_bracket_symbol
18: gotoSt = goto_keyword l_round_bracket_symbol float_number semicolon_symbol float_number r_round_bracket_symbol
19: pensizeSt = pensize_keyword l_round_bracket_symbol float_number r_round_bracket_symbol
20: scaleSt = scale_keyword l_round_bracket_symbol float_number r_round_bracket_symbol
21: pushstateSt = pushstate_keyword l_round_bracket_symbol r_round_bracket_symbol
22: popstateSt = popstate_keyword l_round_bracket_symbol r_round_bracket_symbol
